(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{494:function(t,a,s){"use strict";s.r(a);var n=s(11),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"https://static.wxsm.space/others/revonate.png",alt:""}})]),t._v(" "),s("p",[t._v("企业项目群中往往会有部分代码逻辑需要公用，将其抽离作为公共包发布到私有源的做法是比较优雅的解决方式。但是这么做的话后期需要面临一个问题："),s("strong",[t._v("当一个公共依赖包的使用者数量逐渐庞大的时候，如何保证当此包发布新版本时，所有使用者都能尽可能快地得到更新？")])]),t._v(" "),s("p",[t._v("传统的解决方案：")]),t._v(" "),s("ol",[s("li",[t._v("手工对所有项目逐个升级。这种办法相当繁琐，且容易产生遗漏，当项目数量足够庞大的时候，发布一次将会时相当痛苦的体验；")]),t._v(" "),s("li",[t._v("在依赖安装时指定版本为 "),s("code",[t._v("latest")]),t._v("。这种办法虽然能保证每次安装时都能得到最新版本，但是却有诸多弊端，如：\n"),s("ol",[s("li",[t._v("无法保证依赖的安全性，有可能一次更新不慎造成大面积的瘫痪；")]),t._v(" "),s("li",[t._v("对「依赖锁」不友好，如 "),s("code",[t._v("yarn.lock")]),t._v(" 等。")])])])]),t._v(" "),s("p",[t._v("因此，如何使这个过程变得优雅，是一个亟待解决的问题。")]),t._v(" "),s("h2",{attrs:{id:"关于-renovate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-renovate"}},[t._v("#")]),t._v(" 关于 Renovate")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/renovatebot/renovate",target:"_blank",rel:"noopener noreferrer"}},[t._v("Renovate"),s("OutboundLink")],1),t._v(" 是一个专注于解决依赖问题的库，使用 Node.js 编写，因此它也许会更适合于使用 NPM 或 Yarn 作为依赖管理的项目。我最早从 "),s("a",{attrs:{href:"https://zexo.dev/posts/2020/03/01/keep-your-repo-dependencies-up-to-date-with-renovate",target:"_blank",rel:"noopener noreferrer"}},[t._v("zexo.dev/使用 renovate 监控第三方依赖更新"),s("OutboundLink")],1),t._v(" 这篇博文中得知了这个工具，在 GitHub 上托管的个人项目上尝试了一段时间后发现它非常好用。")]),t._v(" "),s("h2",{attrs:{id:"如何工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何工作"}},[t._v("#")]),t._v(" 如何工作？")]),t._v(" "),s("p",[t._v("复杂的流程就不讲了。总的来说，它会对启用了它的项目做以下几件事情：")]),t._v(" "),s("ol",[s("li",[t._v("发起一个 Onboard PR，将它的配置文件以 PR 的形式合并到项目中。在这个 PR 被合并前，不会有任何后续操作。")]),t._v(" "),s("li",[t._v("在 Onboard 被合并后，发起一个 Pin PR，将项目中用到的依赖的版本锁定，对于 "),s("code",[t._v("package.json")]),t._v(" 来说，即去除任何模糊的通配符，如 "),s("code",[t._v("^")]),t._v(" / "),s("code",[t._v("~")]),t._v(" 等，改用精确的版本号。在这个 PR 被合并前，不会有任何后续操作。")]),t._v(" "),s("li",[t._v("Pin PR 被合并后，开始周期性地检索依赖。当发现有更新时，为每个依赖（或依赖群）更新发起一个 PR，内容包含依赖定义文件（如 "),s("code",[t._v("package.json")]),t._v("） 与依赖锁文件（如 "),s("code",[t._v("yarn.lock")]),t._v("）。")]),t._v(" "),s("li",[t._v("如果用户想要做本次升级，将其合并即可。将来如果该依赖再次有更新可用，会再次生成新的 PR；")]),t._v(" "),s("li",[t._v("如果用户不想做本次升级，将其关闭即可。Renovate 将忽略该版本，不再发起 PR。")])]),t._v(" "),s("p",[t._v("以上只是大致流程，实际上 Renovate 还有非常多的配置项可以发掘，可以提供高度定制化的使用体验。")]),t._v(" "),s("h2",{attrs:{id:"如何使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[t._v("#")]),t._v(" 如何使用？")]),t._v(" "),s("p",[t._v("如果是在 GitHub 上使用，只需到应用市场安装 Renovate 并为它提供想要开启服务的项目的访问权限即可，过几分钟就能在项目内收到 Onboard PR。但这部分不是本文的重点。")]),t._v(" "),s("p",[t._v("本文重点是如何在私有环境中使用它，即 Self-hosted 环节，与我司的自建 GitLab 进行集成。")]),t._v(" "),s("p",[t._v("根据 "),s("a",{attrs:{href:"https://github.com/renovatebot/renovate/blob/master/docs/usage/self-hosting.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("，自建 Renovate 服务有以下几种方式：")]),t._v(" "),s("h3",{attrs:{id:"方式-1-npm-install-g-renovate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式-1-npm-install-g-renovate"}},[t._v("#")]),t._v(" 方式 1："),s("code",[t._v("npm install -g renovate")])]),t._v(" "),s("p",[t._v("该方式最简便，只需要安装了 Node.js 环境以后，通过以上 cli 工具即可实现所有功能。但是官方文档对他的描述十分简略，几乎没有，勉强通过 "),s("code",[t._v("--help")]),t._v(" 才试出了用法：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GITHUB_COM_TOKEN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("your-github-token renovate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --platform"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --endpoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://gitlab.cpmpany.com/api/v4/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("your-gitlab-token "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --onboarding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --onboarding-config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{'),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("extends"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": ["),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("config:base"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']}"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --log-level"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("debug "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --yarnrc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("http://npm-registry.cpmpany.com"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --npmrc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry='),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("http://npm-registry.cpmpany.com"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    path/to/project\n")])])]),s("p",[t._v("解释：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("GITHUB_COM_TOKEN")]),t._v(" 是用来从 GitHub 上获取 Changelog 时要用到的。如果没有提供这个 token，则 Renovate 不会尝试去获取 Changelog；")]),t._v(" "),s("li",[s("code",[t._v("platform")]),t._v(" / "),s("code",[t._v("endpoint")]),t._v(" / "),s("code",[t._v("token")]),t._v(" 分别对应目标平台的参数；")]),t._v(" "),s("li",[s("code",[t._v("onboarding")]),t._v(" 表示项目必须先接受 Onboard PR 才会执行后续操作；")]),t._v(" "),s("li",[s("code",[t._v("onboarding-config")]),t._v(" 为 Onboard PR 所提供的默认配置文件；")]),t._v(" "),s("li",[s("code",[t._v("log-level")]),t._v(" 为 "),s("code",[t._v("debug")]),t._v(" 时才能得到详细的日志，方便调试；")]),t._v(" "),s("li",[t._v("项目内一般自带了 yarnrc 与 npmrc，如果项目内自带的已经覆盖了私有源则无需配置，否则需要配置。需要注意的是，如果使用 npm 则只需要提供 "),s("code",[t._v("npmrc")]),t._v("，但如果使用 yarn 则需要同时提供 "),s("code",[t._v("yarnrc")]),t._v(" 与 "),s("code",[t._v("npmrc")]),t._v("，缺一不可。")])]),t._v(" "),s("p",[t._v("命令行可以作为本地调试工具，最终部署的话还是直接使用打包好的镜像更好用一些。")]),t._v(" "),s("h3",{attrs:{id:"方式2-使用-docker-镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式2-使用-docker-镜像"}},[t._v("#")]),t._v(" 方式2：使用 Docker 镜像")]),t._v(" "),s("p",[t._v("Renovate 提供了构建好的 "),s("a",{attrs:{href:"https://hub.docker.com/r/renovate/renovate/",target:"_blank",rel:"noopener noreferrer"}},[t._v("renovate/renovate"),s("OutboundLink")],1),t._v(" 镜像，可以直接使用。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("docker run --rm -v "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/path/to/your/config.js:/usr/src/app/config.js"')]),t._v(" renovate/renovate\n")])])]),s("p",[t._v("这个镜像有多个版本，其中大体区分为 "),s("code",[t._v("slim")]),t._v(" 版与完整版。它们之间的区别是：")]),t._v(" "),s("ol",[s("li",[t._v("完整版包含了所有可能要用到的构件工具，如 "),s("code",[t._v("Python")]),t._v(" 等，约 1.3GB；")]),t._v(" "),s("li",[s("code",[t._v("slim")]),t._v(" 版仅包含 Renovate 自身，约 130MB。")])]),t._v(" "),s("p",[t._v("可以使用 GitLab CI 与该镜像直接集成，"),s("code",[t._v("image")]),t._v(" 指定 "),s("code",[t._v("renovate/renovate")]),t._v(" 即可。但是由于 Renovate 是一个需要持续周期性执行的任务，放置在 CI 中略显不合适。因此我选择使用 k8s 集成。")]),t._v(" "),s("h3",{attrs:{id:"方式3-使用-kubernetes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式3-使用-kubernetes"}},[t._v("#")]),t._v(" 方式3：使用 Kubernetes")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/renovatebot/renovate/blob/master/docs/usage/self-hosting.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v(" 贴心地提供了 k8s 的配置样例，基本上复制粘贴就能完成配置了：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" renovate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("env\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stringData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_COM_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'any-personal-user-token-for-github-com-for-fetching-changelogs'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set to true to run on all repos you have push access to")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_AUTODISCOVER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_ENDPOINT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.company.com/api/v3'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_GIT_AUTHOR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Renovate Bot <bot@renovateapp.com>'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_PLATFORM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your-github-enterprise-renovate-user-token'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CronJob\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" renovate\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@hourly'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("concurrencyPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Forbid\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" renovate\n              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update this to the latest available and then enable Renovate on")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the manifest")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" renovate/renovate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("23.19.2\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" user/repo\n              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Environment Variables")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("envFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" renovate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("env\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n")])])]),s("p",[t._v("但是，这里有一个地方比较坑的是，像 "),s("code",[t._v("RENOVATE_AUTODISCOVER")]),t._v(" 这种环境变量的命名，官方并没有提供一个文档明确说明到底是以何种规则得到的（或者是我没有找到）。不过经过一番搜索，我找到了它的具体实现：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/renovatebot/renovate/blob/53ca91301f6a36c0c87e7d6b06b1bd8c9ec1b283/lib/config/env.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("lib/config/env.ts"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnvName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Partial"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RenovateOptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nameWithUnderscores "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/([A-Z])/g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_$1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("RENOVATE_")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("nameWithUnderscores"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("也就是，将普通配置名（驼峰命名）：")]),t._v(" "),s("ol",[s("li",[t._v("全部转为大写字母；")]),t._v(" "),s("li",[t._v("单词首字母前加上 "),s("code",[t._v("_")]),t._v("；")]),t._v(" "),s("li",[t._v("前面加上 "),s("code",[t._v("RENOVATE_")])])]),t._v(" "),s("p",[t._v("就得到了环境变量的命名。")]),t._v(" "),s("p",[t._v("但是，经过实践发现这里有一个特例："),s("code",[t._v("logLevel")]),t._v(" 这个配置并不是转换为 "),s("code",[t._v("RENOVATE_LOG_LEVEL")]),t._v("，而仅仅是 "),s("code",[t._v("LOG_LEVEL")]),t._v(" 而已。")]),t._v(" "),s("p",[t._v("另外，官方提供的样例对于所有 secrets 都使用了 "),s("code",[t._v("stringData")]),t._v(" 来储存，不提倡这种做法。我建议将 "),s("code",[t._v("token")]),t._v(" 类密钥信息做 base64 编码储存在 "),s("code",[t._v("data")]),t._v(" 中：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" renovate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_COM_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stringData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_AUTODISCOVER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_ENDPOINT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://gitlab.company.com/api/v4/'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_PLATFORM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gitlab'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_ONBOARDING")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_ONBOARDING_CONFIG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{...}'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_SEMANTIC_COMMITS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'enabled'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_YARNRC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'registry \"http://npm-registry.company.com\"'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RENOVATE_NPMRC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'registry=\"http://npm-registry.company.com\"'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("LOG_LEVEL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'debug'")]),t._v("\n")])])]),s("h2",{attrs:{id:"集成-gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集成-gitlab"}},[t._v("#")]),t._v(" 集成 GitLab")]),t._v(" "),s("p",[t._v("在之前的博文 "),s("RouterLink",{attrs:{to:"/posts/2020-09-23-gitlab-ce-code-review-bot.html"}},[t._v("Gitlab CE Code-Review Bot")]),t._v(" 中，我介绍了 GitLab CE 评审机器人的实现。由于 Renovate 也是基于 Merge Request 实现的，因此它们能够很好地相处：")],1),t._v(" "),s("ol",[s("li",[t._v("Renovate 发起 MR")]),t._v(" "),s("li",[t._v("评审机器人随机分派评审人")]),t._v(" "),s("li",[t._v("评审通过，合并")])]),t._v(" "),s("p",[t._v("但是有几点需要注意：")]),t._v(" "),s("ol",[s("li",[t._v("由于评审机器人使用了 "),s("code",[t._v("WIP")]),t._v(" 来阻止 MR 被手动合并，因此 Renovate 的配置中也需要将 MR 设置为 draft 状态，这样才能维持 MR 的 "),s("code",[t._v("WIP")]),t._v(" 标记。否则，Renovate 会在发起 MR 后的第二次扫描中尝试去除 MR 的 "),s("code",[t._v("WIP")]),t._v(" 标记；")]),t._v(" "),s("li",[t._v("最好给 Renovate 开设一个独立的账号。如果与其他用户或程序共用账号，Renovate 可能会在 force-push 的过程中使某些由其它用户做出的改动丢失；")]),t._v(" "),s("li",[t._v("因为 Renovate 的设计中存在一些高危操作（分支删除，强制推送等），因此最好只赋予 Developer 权限。实际上如果不启用自动合并，它也只需要 Developer 权限。")])]),t._v(" "),s("p",[t._v("符合我需求的最终配置 "),s("code",[t._v("renovate.json")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-json5 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json5"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config:base"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除了 peerDependencies 以外所有依赖都 pin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":pinAllExceptPeerDependencies"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅启用 npm 依赖管理，项目里有其它依赖项不想被 Renovate 管理的，")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如：Docker / Gradle / Cocoa Pod 等")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabledManagers"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅对 @company/ 开头的私有包启用依赖管理，其它外部依赖一律禁用")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"packageRules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"packagePatterns"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"excludePackagePatterns"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^@company/"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 MR 标记为 draft，即 WIP")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"draftPR"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"遇到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到的问题"}},[t._v("#")]),t._v(" 遇到的问题")]),t._v(" "),s("ol",[s("li",[t._v("将 Renovate 部署上 Kubernetes 的时候，要注意能够分配的节点是否都有私有源的访问权限。如果 CronJob 被分配到了无权访问的节点会导致私有包 Lookup Failed，从而更新失败。如果只有部分节点拥有访问权限，可以用 "),s("code",[t._v("nodeSelector")]),t._v(" 或 "),s("code",[t._v("nodeName")]),t._v(" 指定节点；")]),t._v(" "),s("li",[t._v("Changelog 在 GitLab (10.3.2) 上面会丢失格式，如图所示："),s("img",{attrs:{src:"https://static.wxsm.space/blog/98614561-a5fc1f00-2333-11eb-8c9e-3d33107cd7ec.png",alt:"screenshot"}}),t._v("\n这个问题猜测是由于我司的 GitLab 版本过低导致的。因为 "),s("a",{attrs:{href:"http://gitlab.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab.com"),s("OutboundLink")],1),t._v(" (13.x) 上不存在这个问题。但是因为 GitLab 不在我的管辖范围内，因此目前没有找到很好的解决方案，后续如果解决了会更新。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);