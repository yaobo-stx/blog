(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{462:function(t,s,a){"use strict";a.r(s);var e=a(11),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("CORS HTTP Header 是解决 Ajax 跨域问题的方案之一。详情查看："),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("这篇文章主要是记录使用过程中遇到的问题以及解决方案。")]),t._v(" "),a("h2",{attrs:{id:"客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[t._v("#")]),t._v(" 客户端")]),t._v(" "),a("p",[t._v("客户端正常情况无需特殊配置。但有一些需要注意的地方。")]),t._v(" "),a("h3",{attrs:{id:"请求预检"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求预检"}},[t._v("#")]),t._v(" 请求预检")]),t._v(" "),a("p",[t._v("CORS 请求与非跨域请求不一样的是，它会将请求分成两种类型："),a("strong",[t._v("Simple Request（简单请求）"),a("strong",[t._v("与")]),t._v("Preflighted Request（预检请求）")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"simple-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-request"}},[t._v("#")]),t._v(" Simple Request")]),t._v(" "),a("p",[t._v("满足"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Simple_requests",target:"_blank",rel:"noopener noreferrer"}},[t._v("所有条件"),a("OutboundLink")],1),t._v("的请求为简单请求。")]),t._v(" "),a("p",[t._v("看了文档以后发现跟普通请求别无二致。")]),t._v(" "),a("h4",{attrs:{id:"preflighted-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preflighted-request"}},[t._v("#")]),t._v(" Preflighted Request")]),t._v(" "),a("p",[t._v("满足"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests",target:"_blank",rel:"noopener noreferrer"}},[t._v("任一条件"),a("OutboundLink")],1),t._v("的请求为预检请求。")]),t._v(" "),a("p",[t._v("与简单请求不同，预检请求要求必须首先使用 "),a("code",[t._v("OPTIONS")]),t._v(" 方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求，以避免跨域请求对服务器的用户数据产生未预期的影响。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mdn.mozillademos.org/files/14289/prelight.png",alt:"预检请求示意图"}})]),t._v(" "),a("p",[t._v("所以，实际上这种跨域请求会产生两次 HTTP Request：一个预检请求，以及预检成功后的真正的请求。由于预检请求使用 "),a("code",[t._v("OPTIONS")]),t._v(" 方法而不是常见的 "),a("code",[t._v("POST")]),t._v(" 等，因此服务器必须为跨域 API 提供能够正确返回的相应方法。")]),t._v(" "),a("h3",{attrs:{id:"身份验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#身份验证"}},[t._v("#")]),t._v(" 身份验证")]),t._v(" "),a("p",[t._v("如果需要进行 Cookie / Session / HTTP Authentication 等操作，则必须在进行 Ajax 请求时带上一个 "),a("code",[t._v("withCredentials")]),t._v(" 参数。至于如何带这个参数，每个 Lib 应该都有自己的配置方式，下面是两个例子。")]),t._v(" "),a("p",[t._v("Raw Ajax Example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" invocation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://bar.other/resources/credentialed-content/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callOtherDomain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("invocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    invocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    invocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCredentials "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    invocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onreadystatechange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    invocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Using Axios Example:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" corsAgent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  withCredentials"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[t._v("#")]),t._v(" 服务端")]),t._v(" "),a("p",[t._v("服务端的配置并不是只需要给请求响应加个 "),a("code",[t._v("Access-Control-Allow-Origin")]),t._v(" Header 这么简单，还有其它需要处理的地方。因此自己做远不如直接使用相关 Lib 来得方便。比如：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/expressjs/cors",target:"_blank",rel:"noopener noreferrer"}},[t._v("Express CORS"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/koajs/cors",target:"_blank",rel:"noopener noreferrer"}},[t._v("Koa CORS"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"withcredentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#withcredentials"}},[t._v("#")]),t._v(" withCredentials")]),t._v(" "),a("p",[t._v("当启用 "),a("code",[t._v("withCredentials")]),t._v(" 参数后，"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v(" 将不能设置为 "),a("code",[t._v("*")]),t._v(" （允许所有域名），必须指定为唯一的域名，否则预期的效果将无法达到。由于这个规则不会产生 Warning 或 Error，出了问题不了解情况的话还是比较难发现的。")]),t._v(" "),a("p",[t._v("可以预见（事实）的是，当 "),a("code",[t._v("Access-Control-Allow-Origin")]),t._v(" 指定了唯一域名后，使用其它域名访问该 API 也会出现无效的问题。不过相应地也有一个取巧的办法，就是将它设置为 Request 的 Origin Header，这样一来问题就解决了。")])])}),[],!1,null,null,null);s.default=n.exports}}]);