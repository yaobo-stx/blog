(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{430:function(t,s,a){"use strict";a.r(s);var n=a(11),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("作为目前的国内搜索主流，百度的收录规则与国外搜索引擎如谷歌、必应等不太一样，虽然它也有提供普通的Sitemap模式，但是据它自己所言通过这种方式收录效率是最低的。另外还有一种是自动推送，即在网站所有页面都加入一个JS脚本，有人访问时就会自动向百度推送该链接，但实测经常会被浏览器的AD Block插件阻拦。因此还剩下效率最高的一种方式：主动推送。我试过了一些现成的插件，好像都不太好用。因为是一个简单的功能，所以就自己写了一个小工具来实现。")]),t._v(" "),a("h2",{attrs:{id:"主动推送规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主动推送规则"}},[t._v("#")]),t._v(" 主动推送规则")]),t._v(" "),a("p",[t._v("通过调用百度的一个接口，并给它传送要提交的链接，即完成了主动推送的过程，根据接口返回的信息可以判断提交的结果如何（成功/部分成功/失败）。")]),t._v(" "),a("p",[t._v("核心代码如下（由百度提供）：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$urls")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'http://www.example.com/1.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'http://www.example.com/2.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$api")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'http://data.zz.baidu.com/urls?site=xxx&token=xxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$options")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURLOPT_URL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$api")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURLOPT_POST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURLOPT_RETURNTRANSFER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURLOPT_POSTFIELDS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("implode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$urls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURLOPT_HTTPHEADER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Content-Type: text/plain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl_setopt_array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl_exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("$urls")]),t._v(" 就是我们需要推送的 url 数组了，除此之外还有两个需要修改的地方，都在第5行。一是自己站点的域名，二是准入密钥。密钥会由百度站长工具提供。域名则有一点需要注意，必须填写在百度站长平台注册的域名，比如注册的时候是带有 www 的，则这里也必须带 www，否则会返回域名不一致的错误。")]),t._v(" "),a("p",[t._v("API返回的 "),a("code",[t._v("$result")]),t._v(" 是一个 JSON 对象，若推送成功可能包含以下字段：")]),t._v(" "),a("div",{staticClass:"table-responsive"},[a("table",{staticClass:"table table-hover"},[a("tr",[a("th",[t._v("字段")]),t._v(" "),a("th",[t._v("是否必选")]),t._v(" "),a("th",[t._v("参数类型")]),t._v(" "),a("th",[t._v("说明")])]),t._v(" "),a("tr",[a("td",[t._v("success")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("成功推送的url条数")])]),t._v(" "),a("tr",[a("td",[t._v("remain")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("当天剩余的可推送url条数")])]),t._v(" "),a("tr",[a("td",[t._v("not_same_site")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("由于不是本站url而未处理的url列表")])]),t._v(" "),a("tr",[a("td",[t._v("\n        not_valid\n      ")]),t._v(" "),a("td",[t._v("\n        否\n      ")]),t._v(" "),a("td",[t._v("\n        array\n      ")]),t._v(" "),a("td",[t._v("\n        不合法的url列表\n      ")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"remain"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4999998")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"not_same_site"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"not_valid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("推送失败可能返回的字段：")]),t._v(" "),a("div",{staticClass:"table-responsive"},[a("table",{staticClass:"table table-hover"},[a("tr",[a("th",[t._v("\n        字段\n      ")]),t._v(" "),a("th",[t._v("\n        是否必选\n      ")]),t._v(" "),a("th",[t._v("\n        参数类型\n      ")]),t._v(" "),a("th",[t._v("\n        说明\n      ")])]),t._v(" "),a("tr",[a("td",[t._v("\n        error\n      ")]),t._v(" "),a("td",[t._v("\n        是\n      ")]),t._v(" "),a("td",[t._v("\n        int\n      ")]),t._v(" "),a("td",[t._v("\n        错误码，与状态码相同\n      ")])]),t._v(" "),a("tr",[a("td",[t._v("\n        message\n      ")]),t._v(" "),a("td",[t._v("\n        是\n      ")]),t._v(" "),a("td",[t._v("\n        string\n      ")]),t._v(" "),a("td",[t._v("\n        错误描述\n      ")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token is not valid"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("实测小站点一天只能推500条链接，超过了就会报错。不过目前来说是绝对够用了。")]),t._v(" "),a("h2",{attrs:{id:"实现逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现逻辑"}},[t._v("#")]),t._v(" 实现逻辑")]),t._v(" "),a("p",[t._v("关于这个工具，我能想到的比较合理的使用逻辑是这样的：")]),t._v(" "),a("ul",[a("li",[t._v("建站已有一段时间，但是从来没用过百度主动推送，需要能够选择以往的链接并推送之")]),t._v(" "),a("li",[t._v("旧的链接都已推送过，需要在有新页面发布时自动将其推送")])]),t._v(" "),a("p",[t._v("需要推送的页面包括但不限于：")]),t._v(" "),a("ul",[a("li",[t._v("首页")]),t._v(" "),a("li",[t._v("文章（Post）")]),t._v(" "),a("li",[t._v("页面（Page）")]),t._v(" "),a("li",[t._v("目录")]),t._v(" "),a("li",[t._v("标签")])]),t._v(" "),a("p",[t._v("由于是第一版，目前这个工具的逻辑就是这样的：")]),t._v(" "),a("ol",[a("li",[t._v("首先获取到Wordpress站点下所有的正常页面（已发布，无密码）")]),t._v(" "),a("li",[t._v("让用户选择哪些页面需要被推送")]),t._v(" "),a("li",[t._v("用户点击按钮，请求经由AJAX发回后台")]),t._v(" "),a("li",[t._v("后台调用百度接口，实行推送")]),t._v(" "),a("li",[t._v("返回并显示结果")])]),t._v(" "),a("p",[t._v("实际的效果就像这样（"),a("del",[t._v("点此参观")]),t._v(" 2016-03-10更新：由于已更换为插件模式，原页面失效）：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.wxsm.space/blog/48595794-3eec3f80-e991-11e8-9965-17782fe609a2.jpg",alt:""}})]),t._v(" "),a("p",[t._v("这个工具目前还很简陋。当然，如果你没有登录或者已登陆但没有管理员权限的话，点击Submit是会被拒绝的。")]),t._v(" "),a("h2",{attrs:{id:"未来的目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未来的目标"}},[t._v("#")]),t._v(" 未来的目标")]),t._v(" "),a("p",[t._v("虽然是一个简单的东西，但我觉得它可以变得更好：")]),t._v(" "),a("ol",[a("li",[t._v("用户应该可以填写自定义的链接")]),t._v(" "),a("li",[t._v("它应该记住哪些链接已经被提交过了，这个状态应该显示在页面上，并且不再自动勾选")]),t._v(" "),a("li",[t._v("自动触发推送的功能尚未实现，这个也是很重要的")]),t._v(" "),a("li",[t._v("表格可以以一种更好的形式展现")]),t._v(" "),a("li",[t._v("Log可以写得更友好一些")]),t._v(" "),a("li",[t._v("做成插件")]),t._v(" "),a("li",[t._v("……")])]),t._v(" "),a("p",[t._v("如无意外，这些都将在之后的版本更新。")]),t._v(" "),a("p",[t._v("Github: "),a("a",{attrs:{href:"https://github.com/edisond/baidu-submit-for-wordpress",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/edisond/baidu-submit-for-wordpress"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);