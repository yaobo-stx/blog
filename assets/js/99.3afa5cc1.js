(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{463:function(t,s,a){"use strict";a.r(s);var e=a(11),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("这篇文章记录了我是如何一步步地把 "),a("a",{attrs:{href:"https://github.com/wxsms/uiv",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wxsms/uiv"),a("OutboundLink")],1),t._v(" 这个项目的用户文档变得更优雅的。实际上，如何以一种"),a("strong",[t._v("高效又优雅")]),t._v("的方式编写"),a("strong",[t._v("实例文档")]),t._v("一直是我的一个疑惑，比如主要的问题体现在：")]),t._v(" "),a("ul",[a("li",[t._v("如何使文档更易读？")]),t._v(" "),a("li",[t._v("如何使文档更易于维护？")]),t._v(" "),a("li",[t._v("如何减少编写文档的工作量？")]),t._v(" "),a("li",[t._v("实例代码无可避免地需要手工维护吗？")])]),t._v(" "),a("p",[t._v("最后一点是让我最头疼的地方。举个例子，我想要给用户展示一个组件的使用方式，以下代码可以在页面上创建一个 Alert：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Well done!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" You successfully read this important alert message."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("那么，我总要给用户一个相对应的"),a("strong",[t._v("实例")]),t._v("吧。我要在我的文档上面就创建一个这样的 Alert，同时告诉用户说你可以这么用。这是一个很普遍的展示方式，那么问题就在这里了，我是否要将"),a("strong",[t._v("同样的代码写两次")]),t._v("呢？")]),t._v(" "),a("p",[t._v("一开始我确实就是这么做的，虽然我知道这不科学，不高效，更不优雅。但我实在是想不到更好的办法了。")]),t._v(" "),a("p",[t._v("但是，现在，我已经（几乎）把以上的问题都解决了。")]),t._v(" "),a("h2",{attrs:{id:"stage-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stage-1"}},[t._v("#")]),t._v(" Stage-1")]),t._v(" "),a("p",[t._v("写文档这件事，实际上跟写文章差不多，写作体验很重要。")]),t._v(" "),a("p",[t._v("在最开始的时候，项目文档是直接用 Vue 文件编写的，没有经过任何处理，没有经验的我甚至还作死地加入了 i18n，可以说是非常有趣了。以至于到最近，在没有发生这次重构之前，我根本不想动它们。")]),t._v(" "),a("p",[t._v("可以想象，我给关键字句加个粗要手写 "),a("code",[t._v("<b>...</b>")]),t._v("，标记一点代码要用 "),a("code",[t._v("<code>...</code>")]),t._v("，每写一段话都要注意标签标签标签，文档里充斥这些东西，烦不胜烦。")]),t._v(" "),a("p",[t._v("这阶段的文档，存在的问题主要有：")]),t._v(" "),a("ul",[a("li",[t._v("难以编写")]),t._v(" "),a("li",[t._v("无法在网站以外的地方阅读（因为是 Vue 源码）")]),t._v(" "),a("li",[t._v("给项目增加了许多额外代码")]),t._v(" "),a("li",[t._v("手工维护的实例代码")])]),t._v(" "),a("h2",{attrs:{id:"stage-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stage-2"}},[t._v("#")]),t._v(" Stage-2")]),t._v(" "),a("p",[t._v("以上提到的写作体验令人作呕，经过了漫长的时间后，在这一阶段得到了解决。某次机缘巧合，我发现了这样一个工具，它可以通过 webpack 将 Markdown 格式的文本直接转换成为 Vue 组件："),a("a",{attrs:{href:"https://github.com/QingWei-Li/vue-markdown-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-markdown-loader"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.md$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-markdown-loader'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样一来，就可以通过 "),a("code",[t._v("import [*].md")]),t._v(" 的方式，得到一个内含 Markdown 内容（已转 HTML）的 Vue 组件。可以直接在页面上用了！")]),t._v(" "),a("p",[t._v("如果不考虑"),a("strong",[t._v("实例")]),t._v("部分的话，这就已经完美了。准确地说，如果一开始就不需要实例这种东西，那么我肯定会直接用 Gitbook 了。也不需要这个 markdown to vue 来做什么。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("经过了长时间的折磨的我身心疲惫，最终还是决定尝试一下。")]),t._v(" "),a("p",[t._v("然而，就在这个尝试的过程中惊喜地发现："),a("strong",[t._v("它居然还可以执行 Markdown 中的 Code block 中的代码！")])]),t._v(" "),a("p",[t._v("这是什么鬼。一开始发现这个的时候我还是很惊讶的。仿佛打开了新世界的大门。")]),t._v(" "),a("p",[a("strong",[t._v("在后来的不断尝试 - 失败 - 尝试的过程中，我发现了它更多的 Feature：")])]),t._v(" "),a("ul",[a("li",[t._v("可以执行 Code blocks 中的代码（"),a("code",[t._v("<script>")]),t._v("）")]),t._v(" "),a("li",[t._v("可以执行 Code blocks 中的样式（"),a("code",[t._v("<style>")]),t._v("）")]),t._v(" "),a("li",[t._v("可以通过插件给文档 header 加锚点")])]),t._v(" "),a("p",[a("strong",[t._v("但是，也发现了以下问题：")])]),t._v(" "),a("ul",[a("li",[t._v("多个 Code blocks 中的 "),a("code",[t._v("<style>")]),t._v(" 可以合并，但 "),a("code",[t._v("<script>")]),t._v(" 不行，"),a("strong",[t._v("它始终只会执行所找到的第一段 "),a("code",[t._v("<script>")])])])]),t._v(" "),a("p",[t._v("通过查阅 "),a("code",[t._v("vue-loader")]),t._v(" 的文档发现，这是 "),a("code",[t._v(".vue")]),t._v(" 文件本身的限制：支持多个 "),a("code",[t._v("<template>")]),t._v("，多个 "),a("code",[t._v("<style>")]),t._v("，"),a("strong",[t._v("一个 "),a("code",[t._v("<script>")])])]),t._v(" "),a("p",[t._v("也就是说，如果页面上有多个实例需要展示的话，给给。")]),t._v(" "),a("p",[t._v("如果这个问题能够解决的话，再结合我本身的需求，以下内容也需要实现：")]),t._v(" "),a("ul",[a("li",[t._v("将实例代码中的 "),a("code",[t._v("<template>")]),t._v(" 模板插入到其代码块之前，让其成为 Markdown 文件的一部分，然后 Vue 就会自动将它们统统实例化")])]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("其实到了这里，也就是这两个问题需要解决了。")])]),t._v(" "),a("p",[t._v("首先是"),a("strong",[t._v("模板插入")]),t._v("的问题。这个其实不难，在 Markdown 完成渲染前，通过一些手段找到这些需要渲染的模板，然后手动插入。幸而 loader 提供了 "),a("code",[t._v("preprocess")]),t._v(" 钩子，让我能直接完成这件事情。")]),t._v(" "),a("p",[t._v("然后，关于 "),a("code",[t._v("<script>")]),t._v(" 这块，我尝试了好久好久，实在是没办法。但是又真的舍不得因为这仅仅一个问题丢弃以上的那么多的好处。于是就想到了一个折中的办法：禁用 loader 的自动执行代码功能，并手动组装代码块。然而一个悲催的问题又出现了：禁用自动代码执行后，"),a("code",[t._v("<style>")]),t._v(" 也无法自动执行了。")]),t._v(" "),a("p",[t._v("解决方案：我需要在 "),a("code",[t._v("preprocess")]),t._v(" 中将 Code blocks 里面的 "),a("code",[t._v("<style>")]),t._v(" 块全部切出来，贴到 code blocks 的外面（比如文件结尾处）去。一开始我还尝试了将它们的内容合并成为一个 "),a("code",[t._v("<style>")]),t._v("，后来发现其实不需要，因为 "),a("code",[t._v("vue-loader")]),t._v(" 本身就支持一个文件多个 "),a("code",[t._v("<style>")]),t._v(" 节点。")]),t._v(" "),a("p",[t._v("最后的最后，轮到了 "),a("code",[t._v("<script>")]),t._v(" 的组装。我尝试了很久的自动合并，比如将它们的 export 内容转为 object 再 merge 啦，function 转为 object 再 merge 啦，toString 再 merge 啦，等等等等，然而各种方式都以失败告终。结论是：我无法将数个字符串代码块直接合并，也无法转为 object 再合并再转回字符串。实在的实在是没办法了，hard code 吧。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("至此，一个新的解决方案就出现了。简单来说，编写一篇文档，我需要做以下的事情：")]),t._v(" "),a("ul",[a("li",[t._v("用 Markdown 写文档以及实例代码")]),t._v(" "),a("li",[t._v("实例代码块中加入约定的标志")]),t._v(" "),a("li",[t._v("注意同一个 Markdown 中的实例代码块的 "),a("code",[t._v("<script>")]),t._v(" 不能相互冲突")]),t._v(" "),a("li",[t._v("做完所有事情以后，用我自己的智商和爱将所有的实例代码合并成一份")])]),t._v(" "),a("p",[t._v("大功告成。")]),t._v(" "),a("p",[t._v("虽然依然有些麻烦，但相比与 Stage-1，我至少解决了以下的大事：")]),t._v(" "),a("ul",[a("li",[t._v("文档编写体验大幅度提升！")]),t._v(" "),a("li",[t._v("文档可以在网站以外的地方被阅读（如 Github）")]),t._v(" "),a("li",[t._v("实例的 "),a("code",[t._v("<template>")]),t._v(" 与 "),a("code",[t._v("<style>")]),t._v(" 代码无需再有特殊照顾")]),t._v(" "),a("li",[t._v("维护工作量大大减少")])]),t._v(" "),a("p",[t._v("依然存在的问题是：")]),t._v(" "),a("ul",[a("li",[t._v("实例的 "),a("code",[t._v("<script>")]),t._v(" 代码需要维护两份，而且不能彼此冲突")])]),t._v(" "),a("h2",{attrs:{id:"stage-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stage-3"}},[t._v("#")]),t._v(" Stage-3")]),t._v(" "),a("p",[t._v("虽然解决了 80% 的问题，但 Stage-2 依然不完美。我始终想要解决最后一个问题："),a("strong",[t._v("无需特殊照顾的实例 "),a("code",[t._v("<script>")])])]),t._v(" "),a("p",[t._v("想要达到这个目标，有一个完美的办法就是："),a("strong",[t._v("将实例也作为子组件来插入到 Markdown 父组件中去")]),t._v("。这样一来，同一页面的实例代码无法冲突的问题也就一并解决了。")]),t._v(" "),a("p",[t._v("显然，通过目前的 loader 无法达到我想要的效果，它只能够简单地将代码插入 Markdown，并不能构建子组件。因此，要解决这个问题，"),a("strong",[t._v("我需要自己造轮子")]),t._v("。")]),t._v(" "),a("p",[t._v("......")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("于是就有了：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/wxsms/vue-md-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wxsms/vue-md-loader"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("关于这个轮子，它是原有 markdown-loader 的一个替代品，"),a("strong",[t._v("并且能够解决以上提出的所有问题")]),t._v("。")]),t._v(" "),a("p",[t._v("除了完善的原有 Markdown 转换功能以外，它还可以将 Markdown 中的实例代码，比如：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{msg}}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world!'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".cls")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- some-live-demo.vue --\x3e")]),t._v("\n")])])]),a("p",[t._v("变成类似这样的结构：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("some-live-demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("pre")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("..."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("pre")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("A "),a("strong",[t._v("Vue component")]),t._v(" with all it's "),a("code",[t._v("<template>")]),t._v(", "),a("code",[t._v("<script>")]),t._v(" and "),a("code",[t._v("<style>")]),t._v(" settled will be "),a("strong",[t._v("inserted before it's source code block")]),t._v(".")])]),t._v(" "),a("p",[t._v("毫无疑问，它"),a("strong",[t._v("支持同一文件中的多个代码块")]),t._v("。")]),t._v(" "),a("p",[t._v("关于这个插件，其实就是一个典型的、简单的 webpack loader，将一个 markdown 文件转换成了可以被 "),a("code",[t._v("vue-loader")]),t._v(" 识别并加载的 vue 文件。")]),t._v(" "),a("p",[t._v("它的实现思路主要有：")]),t._v(" "),a("ul",[a("li",[t._v("将实例代码块中的 "),a("code",[t._v("<style>")]),t._v(" 直接截取，并放到 Markdown 组件下")]),t._v(" "),a("li",[t._v("将实例代码块中的 "),a("code",[t._v("<script>")]),t._v(" 中 "),a("code",[t._v("export default")]),t._v(" 的内容截取，并作为各自的 Component options")]),t._v(" "),a("li",[t._v("加上相应代码块中的 "),a("code",[t._v("<template>")]),t._v(" 中的内容，稍微组装一下，它就成为了一个 Vue component")]),t._v(" "),a("li",[t._v("在 Markdown 组件中局部注册该 component，并将它插入到代码块的前面去")]),t._v(" "),a("li",[t._v("对于 "),a("code",[t._v("export default")]),t._v(" 外部的内容，把它们抽取出来，集中放到 Markdown 组件下")])]),t._v(" "),a("p",[t._v("以上这些操作，全部通过字符串与正则操作就足以完成了。")]),t._v(" "),a("p",[t._v("然而可以发现，这里面仍有一些有待解决的问题：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<style>")]),t._v(" 有可能冲突")]),t._v(" "),a("li",[a("code",[t._v("export default")]),t._v(" 之外的内容有可能冲突")])]),t._v(" "),a("p",[t._v("这两个问题目前也还没有想到有效的解决办法。但是，就目前来说，满足我的需求已经完全足够了。遗留问题通过后续的开发来逐步解决吧。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("至此，优雅地编写项目文档的全部要素就齐备了：")]),t._v(" "),a("ul",[a("li",[t._v("纯文档编写体验（Markdown）")]),t._v(" "),a("li",[t._v("文档可以在网站以外的地方被阅读（如 Github）")]),t._v(" "),a("li",[t._v("实例代码均无需特殊照顾，所有过程自动完成")]),t._v(" "),a("li",[t._v("没有维护压力")])]),t._v(" "),a("p",[a("strong",[t._v("Enjoy!")])])])}),[],!1,null,null,null);s.default=n.exports}}]);