(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{438:function(e,t,a){"use strict";a.r(t);var s=a(11),l=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("在 Windows 操作系统下开发 NodeJS 项目的时候经常会遇到无法删除 Node_modules 文件夹的尴尬（因为依赖过多，文件路径长度爆炸），解决办法如下。")]),e._v(" "),a("p",[e._v("全局安装 "),a("code",[e._v("rimraf")]),e._v(" 模块到系统下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install -g rimraf\n")])])]),a("p",[e._v("CD 到相应文件夹，执行如下指令：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("rimraf node_modules\n")])])]),a("p",[e._v("等待其完成即可。")]),e._v(" "),a("p",[e._v("其实这个模块也可以用来删除其它无法正常删除的东西，挺好用的。Node 用习惯了以后可以为系统提供许多便利，比如说现在我都不怎么使用系统自带的计算器了，直接 WIN + R + NODE 就可以得到一个 Node 环境下的计算器，非常快捷。")])])}),[],!1,null,null,null);t.default=l.exports}}]);